{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"kNAGMA,EAAe,CACjBC,OAAO,CACHC,KAAM,2BACNC,SAAU,OAGdC,OAAQ,CACJF,KAAM,0BACNC,SAAU,cA+BHE,EAfO,SAACC,GAEnB,IAbeC,EAAIC,EAabC,GAbSF,EAaUD,EAAMC,KAbZC,GAaiB,IAAIE,MAAQC,YAXrC,GAAKH,EAAM,EACXD,EAAM,EAAI,SAAS,SAEnBA,EAAM,EAAI,SAAS,UAU9B,EAAwBP,EAAaS,GAA9BP,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,SACZ,OACI,sBAAKS,UAAS,yBAAoBH,GAAlC,UACI,mBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,6BAAKD,IACL,mBAAGU,UAAS,6BAAwBT,EAAxB,eClClBU,EAAU,SAACP,GAEb,OAEI,qBAAKM,UAAU,mBAAf,SACI,qBAAKA,UAAU,qBAAf,SACI,6BAAKN,EAAMQ,eAM3BD,EAAQE,aAAc,CAClBD,QAAQ,gBAGGD,QCZTG,G,kNAEFC,MAAQ,CAACV,IAAI,KAAMW,aAAa,I,uDAEhC,WAAoB,IAAD,OAEfC,OAAOC,UAAUC,YAAYC,oBACzB,SAACC,GAAD,OAAY,EAAKC,SAAS,CAACjB,IAAKgB,EAASE,OAAOC,cAChD,SAACC,GAAD,OAAO,EAAKH,SAAS,CAACN,aAAcS,EAAIb,e,2BAKhD,WAEI,OAAGc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAE/B,0CAAaqB,KAAKX,MAAMC,iBAG/BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IAE/B,cAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,MAInC,cAAC,EAAD,CAASO,QAAQ,qC,oBAG5B,WAEI,OACA,8BACKc,KAAKC,sB,GAjCAC,IAAMC,YAuCxBC,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,cAAc,Y","file":"static/js/main.d6499118.chunk.js","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from 'react';\r\n\r\nconst seasonConfig = {\r\n    summer:{\r\n        text: \"Let us hit the beach!!!!\",\r\n        iconName: 'sun'\r\n    },\r\n\r\n    winter: {\r\n        text: \"It is freezing cold!!!!\",\r\n        iconName: 'snowflake'\r\n    }\r\n\r\n}\r\n\r\nconst getSeason = (lat,month) =>{\r\n\r\n    if(month > 2 && month<9){\r\n        return lat > 0 ? 'summer':'winter';\r\n    }else{\r\n        return lat > 0 ? 'winter':'summer';\r\n    }\r\n\r\n}\r\n\r\n\r\nconst SeasonDisplay = (props)=>{\r\n\r\n    const season = getSeason(props.lat, new Date ().getMonth());\r\n   \r\n    const {text,iconName} = seasonConfig[season];\r\n    return (\r\n        <div className={`season-display ${season}`}>\r\n            <i className={`icon-left massive ${iconName} icon`}/>\r\n            <h1>{text}</h1>\r\n            <i className={`icon-right massive ${iconName} icon`}/>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default SeasonDisplay;\r\n\r\n","import React from 'react';\r\n\r\nconst Spinner = (props)=>{\r\n\r\n    return (\r\n\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\">\r\n                <h1>{props.message}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nSpinner.defaultProps ={\r\n    message:'Loading.....'\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay  from './SeasonDisplay';\r\nimport Spinner from './Spinner';\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {lat:null, errorMessage:''};\r\n\r\n    componentDidMount(){\r\n\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position)=>this.setState({lat: position.coords.latitude}),\r\n            (err)=>this.setState({errorMessage: err.message})\r\n        );\r\n    }\r\n\r\n\r\n    renderContent(){\r\n\r\n        if(this.state.errorMessage && !this.state.lat){\r\n\r\n            return <div> Error:{this.state.errorMessage}</div>\r\n        }\r\n\r\n        if(!this.state.errorMessage && this.state.lat){\r\n\r\n            return <SeasonDisplay lat={this.state.lat}/>\r\n    \r\n        }\r\n\r\n        return <Spinner message=\"Please accept location request\"/>\r\n\r\n    }\r\n    render(){\r\n\r\n        return(\r\n        <div>\r\n            {this.renderContent()}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<App/>,document.querySelector('#root'));"],"sourceRoot":""}